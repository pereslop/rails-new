.post-comments id= "post-content-#{post.id}" data-post-id=post.id
  .post-content
    .user-avatar
      = link_to account_user_path(post.user), method: :get do
        - if post.user.avatar.url
          = image_tag post.user.avatar.url, class: 'img-responsive img-circle'
        - else
          = image_tag 'britni.png', class: 'img-responsive img-circle'
    .post-data
      .post-info
        .comment-username
          = link_to "#{post.user.username}", account_user_path(post.user), method: :get, class: 'post-username'
        p.post-time= "#{time_ago_in_words(post.created_at)} ago"
        .like
          = render 'account/posts/like_btn', post: post
        .post-actions
          - if post.user == current_user || current_user.admin?
            - if local_assigns[:user_post]
              = render 'account/users/posts/user_post_edit_and_destroy_actions', post: post, user: currne
            - else
              = render 'account/posts/post_edit_and_destroy_actions', post: post
      p.comment-text= post.content
  .post-content
    .new-post
      = render 'account/comments/new', comment: post.comments.new
  .underline
  #comments
  a href="#" id="load-comments"
    | load more comments...
coffee:
  RailsNew.commentsPage = 0
  RailsNew.postId = $('[id^=post-content-]').attr("data-post-id")
  $ ->
    RailsNew.comments = new RailsNew.Collections.Comments
    RailsNew.commentsListView = new RailsNew.Views.CommmentsListView(collection: RailsNew.comments)
    RailsNew.comments.fetch()
  $('#load-comments').click ->
    RailsNew.commentsPage += 1
    RailsNew.comments = new RailsNew.Collections.Comments
    RailsNew.commentsListView = new RailsNew.Views.CommmentsListView(collection: RailsNew.comments)
    RailsNew.comments.fetch()
